# Build environment for GRAIN releases
FROM golang:1.23-alpine

# Install build dependencies including frontend build tools
RUN apk add --no-cache \
    git \
    zip \
    tar \
    gzip \
    curl \
    bash \
    ca-certificates \
    dos2unix \
    wget \
    libstdc++ \
    libgcc \
    perl

# Install TailwindCSS CLI - use musl version for Alpine Linux
RUN ARCH=$(uname -m) && \
    if [ "$ARCH" = "x86_64" ]; then TAILWIND_ARCH="x64"; \
    elif [ "$ARCH" = "aarch64" ]; then TAILWIND_ARCH="arm64"; \
    else echo "Unsupported architecture: $ARCH" && exit 1; fi && \
    echo "Downloading TailwindCSS musl binary for: $TAILWIND_ARCH" && \
    wget -O /usr/local/bin/tailwindcss \
    https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-${TAILWIND_ARCH}-musl && \
    chmod +x /usr/local/bin/tailwindcss && \
    echo "TailwindCSS CLI installed successfully:" && \
    /usr/local/bin/tailwindcss --version

# Set environment variables for cross-compilation
ENV CGO_ENABLED=0

# Set working directory
WORKDIR /app

# Copy build script first
COPY docs/development/build-in-docker.sh /usr/local/bin/build-script

# Fix line endings and make executable
RUN dos2unix /usr/local/bin/build-script && \
    chmod +x /usr/local/bin/build-script

# Copy the entire project (excluding items in .dockerignore)
COPY . .

# Entry point is the build script
ENTRYPOINT ["/usr/local/bin/build-script"]